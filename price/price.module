<?php
function price_menu() {
	$items = array();

	$items['price'] = array(
		'title' => t('Price'),
		'page callback' => 'price_show_price_page',
		'access arguments' => array('access content'),
		'type' => MENU_NORMAL_ITEM,
	);
	$items['admin/price'] = array(
		'title' => t('Price'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('price_show_price'),
		'access arguments' => array('administer price'),
		'type' => MENU_NORMAL_ITEM, 
	);
	$items['admin/price/view'] = array(
		'title' => t('Price'),
		'page callback' => 'price_show_price',
		'access arguments' => array('administer price'),
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'file' => 'price.admin.inc',    
	);
    $items['admin/price/view/ajax'] = array(
		'title' => t('Price'),
		'page callback' => 'drupal_get_form',
        'page arguments' => array('price_show_form_ajax', 4),
		'access arguments' => array('administer price'),
	);
    $items['admin/price/%'] = array(
		'title' => t('Price'),
		'page callback' => 'drupal_get_form',
        'page arguments' => array('price_show_form', 2),
		'access arguments' => array('administer price'),
	);
	$items['admin/price/add'] = array(
		'title' => t('Add Product/Service'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('price_add_product_form'),
		'access arguments' => array('administer price'),
		'type' => MENU_LOCAL_ACTION,
		'file' => 'price.admin.inc',    
	);
    $items['admin/price/edit/%'] = array(
		'title' => t('Edit Product'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('price_edit_product_form', 3),
		'access arguments' => array('administer price'),
		'file' => 'price.admin.inc',    
	);
    $items['admin/price/del/%'] = array(
		'title' => t('Delete Product'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('price_delete_form', 3),
		'access arguments' => array('administer price'),
		'file' => 'price.admin.inc',    
	);
	$items['admin/price/val'] = array(
		'title' => t('Val'),
		'page callback' => 'price_show_val',
		'access arguments' => array('administer price'),
		'type' => MENU_LOCAL_TASK,
		'file' => 'price.admin.inc',    
	);
	$items['admin/price/val/add'] = array(
		'title' => t('Add Val'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('price_add_val_form'),
		'access arguments' => array('administer price'),
		'type' => MENU_LOCAL_ACTION,
		'file' => 'price.admin.inc',    
	);
	$items['admin/price/val/del/%'] = array(
		'title' => t('Val'),
		'page callback' => 'price_delete_val',
		'access arguments' => array('administer price'),
		'page arguments' => array(4),
		'file' => 'price.admin.inc',    
	);
	$items['admin/price/val/edit/%'] = array(
		'title' => t('Edit val'),
        'page callback' => 'drupal_get_form',
		'page arguments' => array('price_edit_val_form', 4),
		'access arguments' => array('administer price'),
		'file' => 'price.admin.inc',    
	);
	$items['admin/price/cat'] = array(
		'title' => t('Categories'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('price_show_cat_form'),
		'access arguments' => array('administer price'),
		'file' => 'price.admin.inc',
		'type' => MENU_LOCAL_TASK,    
	);
	$items['admin/price/cat/add'] = array(
		'title' => t('Add Category'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('price_add_cat_form'),
		'access arguments' => array('administer price'),
		'type' => MENU_LOCAL_ACTION,
		'file' => 'price.admin.inc',    
	);
    $items['admin/price/cat/edit/%'] = array(
		'title' => t('Edit Category'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('price_edit_cat_form', 4),
		'access arguments' => array('administer price'),
		'file' => 'price.admin.inc',    
	);
	$items['admin/price/cat/del/%'] = array(
		'title' => t('Val'),
		'page callback' => 'price_delete_cat',
		'access arguments' => array('administer price'),
		'page arguments' => array(4),
		'file' => 'price.admin.inc',    
	);
	
	return $items;
}

function price_permission() {
	return array(
		'administer price' => array(
			'title' => t('Administer price'),
			'description' => t('Allows to access price data.'),
		),
	);
}
function price_show_price() {
    drupal_add_library('system', 'drupal.ajax');
	$result = db_select('j_category','jc')->fields('jc')->execute();
	$options = array();
    foreach($result as $item){
        $options[$item->tid] = $item->c_name;
    }

    $form['cat'] = array (
        '#type' => 'select',
        '#title' => t('Choose Category'),
        '#options' => $options,
        '#required' => true,
        '#ajax' => 	array(
			'callback' => 'price_get_price',
			'wrapper' => 'price_wrapper',
			'method' => 'replace',
			'effect' => 'fade',
			'speed' => 100,
		),
        '#suffix' => '<div id="price_wrapper"></div>',
    );
	return $form;
}

function price_get_price($form, $form_state){
  
    $cat = $form_state['values']['cat'];
    
    return '<div id="price_wrapper">'.drupal_render(drupal_get_form('price_show_form_ajax', $cat)).'</div>';
}
function price_theme() {
	return array(
		'price_show_cat_form' => array(
			'render element' => 'form',
		),
        'price_show_form' => array(
			'render element' => 'form',
		),
        'price_show_form_ajax' => array(
			'render element' => 'form',
		),
	);
}
function price_show_form_ajax($form, $form_state, $cat) {
  
    $result = db_query("SELECT jp.*, jv.val FROM {j_price} jp INNER JOIN {j_val} jv ON jp.vid = jv.vid WHERE jp.tid = :tid ORDER BY jp.weight ASC", array(':tid' => $cat));
    $cat_name = db_select('j_category','jc')->condition('tid', $cat, '=')->fields('jc', array('c_name'))->execute()->fetchField();

    foreach ($result as $value) {
		$products[] = $value;
	}
	$delta = round(count($products) / 2);

	$form['product'] = array(
		'#tree' => TRUE,
	);

	foreach ($products as $pid => $item) {
		$form['product'][$item->pid]['#item'] = (object) array(
					'pid' => $item->pid,
					'name' => $item->name,
					'weight' => $item->weight,
					'status' => $item->status,
                    'cost' => $item->cost,
                    'val'=> $item->val,
		);
		$form['product'][$item->pid]['#weight'] = $item->weight;
		$form['product'][$item->pid]['weight'] = array(
			'#type' => 'weight',
			'#title' => t('Weight for @title', array('@title' => $item->name)),
			'#title_display' => 'invisible',
			'#delta' => $delta,
			'#default_value' => $item->weight,
			'#attributes' => array('class' => array('selected-weight')),
		);
        $form['product'][$item->pid]['status'] = array (
            '#type' => 'checkbox', 
            '#default_value' => $item->status, 
        );
	}
   $form['value'] = array (
        '#type' => 'hidden',
        '#value'=> $cat_name,
    );
    $form['actions'] = array('#type' => 'actions');
	$form['actions']['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Save order'),
        '#ajax' => array(
			'event' => 'click',
			'callback' => 'price_send',
			'wrapper' => 'price_form_ajax',
			'progress' => 'throbber',
			'method' => 'replace',
			'effect' => 'fade',
		),
        '#suffix' => '<div id="ajax-message-price"></div>',

	);

	return $form;
    
}
function price_send($form, &$form_state) {
     $varables = $form_state['values']['product'];
     foreach ($varables as $pid => $item) {

    db_update('j_price')
			->condition('pid', $pid, '=')
			->fields(array(
				'weight' => $item['weight'],
                'status' => $item['status'],
			))
			->execute();
	}	
      $commands[] = array ();
      $html = t('Change has saved');
      $commands[] = ajax_command_html('#ajax-message-price', $html); 
       
        return array(
		'#type' => 'ajax',
		'#commands' => $commands,
	);
}
function theme_price_show_form_ajax($variables) {
//	ctools_include('ajax');
	$form = $variables['form'];
    
	$header = array(t('Product'), t('Weight'), t('Published'),t('Cost'), t('Operations'));
    $caption = $form['value']['#value'];
	
	$rows = array();
	foreach (element_children($form['product']) as $pid) {
		$name = $form['product'][$pid]['#item']->name;
		$status = $form['product'][$pid]['#item']->status;
        $pid = $form['product'][$pid]['#item']->pid;
        $cost = $form['product'][$pid]['#item']->cost;
        $val = $form['product'][$pid]['#item']->val;
        
		$row = array();
		$row[] = $name;
		$row[] = drupal_render($form['product'][$pid]['weight']);
        $row[] = drupal_render($form['product'][$pid]['status']);
        $row[] = $cost.'<span class="val"> '.$val .'</span>';
		$row[] =  l(('edit'), 'admin/price/edit/' . $pid) . '&#32;&#32;&#32;&#32;'. l(('delete'), 'admin/price/del/' . $pid)  ;
        
		$rows[] = array('data' => $row, 'class' => array('draggable', 'row-' . $pid), 'sticky' => FALSE/*, 'style' =>$bg_color*/);
	}

	drupal_add_tabledrag('selected', 'order', 'sibling', 'selected-weight');

	$output = theme('table', array('header' => $header, 'rows' => $rows, 'caption' => $caption, 'attributes' => array('id' => 'selected')));
	$output .= drupal_render_children($form);
	return $output;
}
function price_show_price_page() {
    $path = drupal_get_path('module', 'price');
	
	drupal_add_css($path . '/price.css', 'file');
    //$result = db_query("SELECT jp.*, jv.val FROM {j_price} jp INNER JOIN {j_val} jv ON jp.vid = jv.vid WHERE jp.status = :status ORDER BY jp.weight ASC", array(':status' => 1));
   	$result = db_select('j_category','jv')->fields('jv')->condition('status','1', '=')->execute();
    $output = '';
    foreach($result as $item){
        $tid = $item->tid;
        $cat = $item->c_name;
        $result = db_query("SELECT jp.*, jv.val FROM {j_price} jp INNER JOIN {j_val} jv ON jp.vid = jv.vid WHERE jp.status = :status AND jp.tid = :tid ORDER BY jp.weight ASC", array(':status' => 1, ':tid' => $tid));
        $output .= price_make_table($cat, $result);
    }
    return $output;
}
function price_make_table($cap, $data) {
    $caption = $cap;
    $header = array(t('Product'), t('Cost'));
    $i = 0;
    $output = '';
    foreach($data as $item) {
        $i++;
        $row = array();
        $row[] = $item->name;
        $row[] = $item->cost . '<span class="val"> '.$item->val .'</span>';
        $rows[] = array('data' => $row, 'class' => array( 'row-' . $i), 'sticky' => FALSE);
    }  
    $output = theme('table', array('header' => $header, 'rows' => $rows, 'caption' => $caption, 'attributes' => array('id' => 'price-table-')));
    return $output;  
}
